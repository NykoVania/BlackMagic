--Assailant V5.
-- Created by: Nyko#8409 :)
local UserInputService = game:GetService("UserInputService")
local Player = game:GetService("Players").LocalPlayer
local Character = Player.Character
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Resources = ReplicatedStorage.ClassesResources
local ClassUsing = Player.Class.Value
local Class = Player.Backpack[ClassUsing]
local Cooldowns = Class.Cooldowns
local FakeFrame = Class.AnimationsFakeKeyframes
local Debounce1 = false
local Debounce2 = false
local Debounce3 = false
local Debounce4 = false
local Debounce5 = false
local Debounce6 = false
local Debounce7 = false
local Debounce8 = false
local DebounceQ = false
local DebounceE = false
local DebounceR = false
local DebounceZ = false
local DebounceX = false
local DebounceJZ = false
local DebounceJX = false
local LocalConditions = Character.LocalConditions
local Conditions = Character.Conditions



for i, v in pairs(Cooldowns:GetDescendants()) do
    v:GetPropertyChangedSignal("Value"):Connect(function()
        if v.Value == 0 and v.Name == "1" then
            Debounce1 = false
        elseif 
            v.Value == 0 and v.Name == "2" then
            Debounce2 = false
        elseif 
            v.Value == 0 and v.Name == "3" then
            Debounce3 = false
        elseif 
            v.Value == 0 and v.Name == "4" then
            Debounce4 = false
        elseif 
            v.Value == 0 and v.Name == "5" then
            Debounce5 = false
        elseif 
            v.Value == 0 and v.Name == "6" then
            Debounce6 = false
        elseif 
            v.Value == 0 and v.Name == "7" then
            Debounce7 = false
        elseif 
            v.Value == 0 and v.Name == "8" then
            Debounce8 = false
        elseif 
            v.Value == 0 and v.Name == "Launcher" then
            DebounceR = false
        elseif 
            v.Value == 0 and v.Name == "Guardbreak" then
            DebounceQ = false
        elseif 
            v.Value == 0 and v.Name == "Breakdown" then
            DebounceE = false
        end
    end
    )
end
----------------------------------------
Resources.Revenant.Animations.IdleEquipped.AnimationId = Resources.Imperium.Animations.Idle.AnimationId
Resources.Revenant.Animations.SprintEquipped.AnimationId = Resources.Imperium.Animations.Sprint.AnimationId
Resources.Revenant.Animations.BackWalkUnequipped.AnimationId = Resources.Aggressor.Animations.BackWalk.AnimationId
Resources.Revenant.Animations.IdleUnequipped.AnimationId = Resources.Faint.Animations.Idle.AnimationId
---------------------------------------------
-----------------------------------------------

UserInputService.InputBegan:connect(function(Instance)
    if Instance.KeyCode == Enum.KeyCode.Q and DebounceQ == false and Conditions.Guarding.Value == false  then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                DebounceQ = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.Faint.Animations["Guardbreak"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play(0,1,0.9)
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                            end
                        end)
                    end
                end
            end
        until DebounceQ == true
    end
end)


UserInputService.InputBegan:connect(function(Instance)
    if Instance.KeyCode == Enum.KeyCode.Five and DebounceR == false and Conditions.Guarding.Value == false  then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                DebounceR = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.Faint.Animations["LauncherSH"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play()
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                            end
                        end)
                    end
                end
            end
        until DebounceR == true
    end
end)

UserInputService.InputBegan:connect(function(Instance)
    if Instance.KeyCode == Enum.KeyCode.One and Debounce1 == false and Conditions.Guarding.Value == false  then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                Debounce1 = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.Faint.Animations["SP1"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play()
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                            end
                        end)
                    end
                end
            end
        until Debounce1 == true
    end
end)


UserInputService.InputBegan:connect(function(Instance)
    if Instance.KeyCode == Enum.KeyCode.R and Debounce5 == false and Conditions.Guarding.Value == false  then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                Debounce5 = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.Faint.Animations["SP5"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play()
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                            end
                        end)
                    end
                end
            end
        until Debounce5 == true
    end
end)


-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
--In-air moves OPTIONAL.

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
--Autocombo stuff idfk man.

FakeFrame.ChildAdded:Connect(function(Value)
	if Value.Name == "AC1"  and Conditions.Guarding.Value == false then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                DebounceZ = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.Secare.Animations["HAC2"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play(0,1,2)
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                                DebounceZ = false
                            end
                        end)
                    end
                end
            end
        until DebounceZ == true
        DebounceZ = false
    end
end)
FakeFrame.ChildAdded:Connect(function(Value)
	if Value.Name == "AC2"  and Conditions.Guarding.Value == false then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                DebounceZ = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.Aggressor.Animations["SP1"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play(0,1,1.45)
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                                DebounceZ = false
                            end
                        end)
                    end
                end
            end
        until DebounceZ == true
        DebounceZ = false
    end
end) 
FakeFrame.ChildAdded:Connect(function(Value)
	if Value.Name == "AC3"  and Conditions.Guarding.Value == false then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                DebounceZ = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.Imperium.Animations["JAC2_New"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play()
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                                DebounceZ = false
                            end
                        end)
                    end
                end
            end
        until DebounceZ == true
        DebounceZ = false
    end
end)
FakeFrame.ChildAdded:Connect(function(Value)
	if Value.Name == "AC4"  and Conditions.Guarding.Value == false then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                DebounceZ = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.Secare.Animations["AC1"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play(0,1,1.2)
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                                DebounceZ = false
                            end
                        end)
                    end
                end
            end
        until DebounceZ == true
        DebounceZ = false
    end
end)

FakeFrame.ChildAdded:Connect(function(Value)
	if Value.Name == "HAC2"  and Conditions.Guarding.Value == false then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                DebounceX = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources["Chrono Knight"].Animations["HAC2"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play()
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop()
                                DebounceX = false
                            end
                        end)
                    end
                end
            end
        until DebounceX == true
        DebounceX = false
    end
end)
FakeFrame.ChildAdded:Connect(function(Value)
	if Value.Name == "HAC3"  and Conditions.Guarding.Value == false then
        repeat
            wait()
            for i,Animation in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do
               if Animation.Name == "Animation" then
                wait()
                Animation:Stop()
                DebounceX = true
                local AnimVal = Character.Humanoid:LoadAnimation(Resources.LTerumi.Animations["LAC"])
                AnimVal.Priority = Enum.AnimationPriority.Action4
                AnimVal:Play()
                wait(.5)
                for i,v in pairs(Conditions:GetDescendants()) do
                        v:GetPropertyChangedSignal("Value"):Connect(function()
                            if v.Name == "DoingMoves" and v.Value == true then
                                AnimVal:Stop(0,1,1.2)
                                DebounceX = false
                            end
                        end)
                    end
                end
            end
        until DebounceX == true
        DebounceX = false
    end
end)

---------------------------------------------------------------------------------------------------------------------
-- Air autocombos n stuff

UserInputService.InputBegan:Connect(Input)
